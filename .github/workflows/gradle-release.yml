name: Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'The part of the version to bump, after cutting a release'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        run: echo ${{ secrets.SPECMATIC_DOCKER_HUB_TOKEN }} | docker login -u ${{ vars.SPECMATIC_DOCKER_HUB_USERNAME }} --password-stdin

      - name: 'Build/test'
        uses: specmatic/specmatic-github-workflows/action-build-gradle@main
        with:
          gradle-extra-args: -Preposilite.user=${{ vars.SPECMATIC_REPOSILITE_USERNAME }} -Preposilite.token=${{ secrets.SPECMATIC_REPOSILITE_TOKEN }}

      - name: 'Release'
        run: |
          RELEASE_VERSION=$(semver get release $(/usr/bin/grep -E '^\s*version\s*=' gradle.properties | /usr/bin/sed -E -e 's/^\s*version\s*=//g'))
          NEXT_VERSION=$(semver bump ${{ github.event.inputs.bump_type }} $(/usr/bin/grep -E '^\s*version\s*=' gradle.properties | /usr/bin/sed -E -e 's/^\s*version\s*=//g'))-SNAPSHOT
          echo "Making a release with version $RELEASE_VERSION and next version $NEXT_VERSION..."
          
          git clean -fd
          git remote set-url origin "https://x-access-token:${{ secrets.SPECMATIC_GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

          ./gradlew --stacktrace \
            release \
            -Prelease.releaseVersion=${RELEASE_VERSION} \
            -Prelease.newVersion=${NEXT_VERSION}
          
          echo "Bumping version to $RELEASE_VERSION in documentation site"
          
          curl -X POST \
            -H "Authorization: Bearer ${SPECMATIC_GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/specmatic/docs.specmatic.io/actions/workflows/update-version-numbers.yml/dispatches \
              -d '{"ref":"main","inputs":{"specmatic-release-test-version":"'"${RELEASE_VERSION}"'"}}'

        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: "${{ secrets.SPECMATIC_GPG_PRIVATE_KEY }}"
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: "${{ secrets.SPECMATIC_GPG_KEY_ID }}"
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: "${{ secrets.SPECMATIC_GPG_PRIVATE_KEY_PASSPHRASE }}"
          ORG_GRADLE_PROJECT_specmaticSnapshotsUsername: "${{ vars.SPECMATIC_REPOSILITE_USERNAME }}"
          ORG_GRADLE_PROJECT_specmaticSnapshotsPassword: "${{ secrets.SPECMATIC_REPOSILITE_TOKEN }}"
          ORG_GRADLE_PROJECT_specmaticReleasesUsername: "${{ vars.SPECMATIC_REPOSILITE_USERNAME }}"
          ORG_GRADLE_PROJECT_specmaticReleasesPassword: "${{ secrets.SPECMATIC_REPOSILITE_TOKEN }}"
          ORG_GRADLE_PROJECT_specmaticPrivateUsername: "${{ vars.SPECMATIC_REPOSILITE_USERNAME }}"
          ORG_GRADLE_PROJECT_specmaticPrivatePassword: "${{ secrets.SPECMATIC_REPOSILITE_TOKEN }}"
          SPECMATIC_GITHUB_USER: "${{ vars.SPECMATIC_GITHUB_USER }}"
          SPECMATIC_GITHUB_TOKEN: "${{ secrets.SPECMATIC_GITHUB_TOKEN }}"
          SPECMATIC_DOCKER_HUB_TOKEN: "${{ secrets.SPECMATIC_DOCKER_HUB_TOKEN }}"
          SPECMATIC_DOCKER_HUB_USERNAME: "${{ vars.SPECMATIC_DOCKER_HUB_USERNAME }}"
